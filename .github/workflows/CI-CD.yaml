name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: checkpoint  
  HELM_CHART_PATH: helm 
  APP: counter-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read

    steps:
    - name: get runner ip addresses
      id: ip
      uses: haythem/public-ip@v1.2
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::061039772474:role/github-actions-cicd-role  
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Set docker image tag
      run: |
         echo "IMAGE_TAG=$APP-${{ github.sha }}" >> $GITHUB_ENV
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Adding Github Actions ip to cluster endpoint whitelist 
      run: |
         CURRENT_WHITELIST=$(aws eks describe-cluster --name ${{ env.ECR_REPOSITORY }}-eks --query "cluster.resourcesVpcConfig.publicAccessCidrs" --output text |  awk '{print $1}' )
         aws eks update-cluster-config --name ${{ env.ECR_REPOSITORY }}-eks --region ${{ env.AWS_REGION }} --resources-vpc-config publicAccessCidrs=["${CURRENT_WHITELIST}","${{ steps.ip.outputs.ipv4 }}/32"]
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ env.ECR_REPOSITORY }}-eks --region ${{ env.AWS_REGION }}
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.9.0   
    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install my-app $HELM_CHART_PATH \
        --set image.tag=$IMAGE_TAG